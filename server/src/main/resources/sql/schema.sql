CREATE TABLE IF NOT EXISTS MEMBER
(
    MEMBER_ID        BIGINT       NOT NULL AUTO_INCREMENT,
    PASSWORD         VARCHAR(255) NOT NULL UNIQUE,
    EMAIL            VARCHAR(30)  NOT NULL,
    NICKNAME         VARCHAR(20)  NOT NULL,
    CREATED_AT       DATETIME,
    LAST_MODIFIED_AT DATETIME,
    PRIMARY KEY (MEMBER_ID)
);

CREATE TABLE IF NOT EXISTS QUESTION
(
    QUESTION_ID      BIGINT      NOT NULL AUTO_INCREMENT,
    TITLE            VARCHAR(50) NOT NULL,
    BODY             TEXT        NOT NULL,
    ADOPTED          BOOLEAN     NOT NULL,
    VIEWS            INT         NOT NULL,
    CREATED_AT       DATETIME,
    LAST_MODIFIED_AT DATETIME,
    MEMBER_ID        BIGINT      NOT NULL,
    PRIMARY KEY (QUESTION_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID)
);

CREATE TABLE IF NOT EXISTS ANSWER
(
    ANSWER_ID        BIGINT   NOT NULL AUTO_INCREMENT,
    ANSWER_BODY      TEXT     NOT NULL,
    ADOPTED          BOOLEAN  NOT NULL,
    CREATED_AT       DATETIME NOT NULL,
    LAST_MODIFIED_AT DATETIME,
    MEMBER_ID        BIGINT   NOT NULL,
    QUESTION_ID      BIGINT   NOT NULL,
    PRIMARY KEY (ANSWER_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (QUESTION_ID) REFERENCES QUESTION (QUESTION_ID)
);

CREATE TABLE IF NOT EXISTS COMMENT
(
    COMMENT_ID   BIGINT   NOT NULL AUTO_INCREMENT,
    COMMENT_BODY BIGINT   NOT NULL,
    CREATED_AT   DATETIME NOT NULL,
    ANSWER_ID    BIGINT   NOT NULL,
    MEMBER_ID    BIGINT   NOT NULL,
    PRIMARY KEY (COMMENT_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (ANSWER_ID) REFERENCES ANSWER (ANSWER_ID)
);

CREATE TABLE IF NOT EXISTS ADOPTION
(
    LIKE_ID   BIGINT NOT NULL AUTO_INCREMENT,
    MEMBER_ID BIGINT NOT NULL,
    ANSWER_ID BIGINT NOT NULL,
    PRIMARY KEY (LIKE_ID),
    FOREIGN KEY (MEMBER_ID) REFERENCES MEMBER (MEMBER_ID),
    FOREIGN KEY (ANSWER_ID) REFERENCES ANSWER (ANSWER_ID)
);

